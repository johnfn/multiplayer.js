 ☐ the initialGameState should be a fn on the MultiplayerServer which the constructor of MultiplayerClient shuold pull down
 ☐ gamestate shoulf be a typedef
 ☐ When updates come back from the server that differ from the stuff we have on the client, we should recursively travel both state trees, find all the places that differ and update them nonintrusively.
   ☐ If a unit changed position, maybe tween it to the right place rather than jump
   ☐ If a unit that you thought was alive is now dead, play its death animation.
   ☐ I think all this stuff can be done super non-intrusively w/ setters.
 ☐ Obviously, when you send objs over the wire, you dont want to send along stuff like functions. They will never be equal and will only cause heartache. The sender fn should recursively trawl the state hierarchy to remove cruft.